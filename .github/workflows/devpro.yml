name: Docker Installer Release

on:
  workflow_dispatch:  # 允许手动触发工作流
  schedule:           # 定期运行工作流
    - cron: '0 16 * * *'  # 每天 UTC 时间 16:00 运行

permissions:
  contents: write      # 读取和写入仓库内容
  packages: write      # 发布包
  issues: write        # 创建讨论或问题（用于发布通知，可选）
  statuses: write      # 更新状态（可选）

env:
  INSTALLERS_DIR: installers  # 存储安装包的目录
  LATEST_VERSION: ${{ secrets.DOCKER_DESKTOP_VERSION }}

jobs:
  download_installers:
    name: Download Installers
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Environment Variables
        run: |
          mkdir -p $INSTALLERS_DIR

      - name: Debug Environment Variables
        run: |
          echo "LATEST_VERSION: $LATEST_VERSION"
          echo "INSTALLERS_DIR: $INSTALLERS_DIR"

      - name: Download Docker Desktop Installers
        env:
          LATEST_VERSION: ${{ env.LATEST_VERSION }}
          INSTALLERS_DIR: ${{ env.INSTALLERS_DIR }}
        run: |
          declare -A installers=(
            ["docker_install.sh"]="https://get.docker.com"
            ["docker_desktop_installer_windows_x86_64.exe"]="https://desktop.docker.com/win/stable/${LATEST_VERSION}/Docker%20Desktop%20Installer.exe"
            ["docker_desktop_installer_mac_arm64.dmg"]="https://desktop.docker.com/mac/stable/${LATEST_VERSION}/Docker.dmg"
            ["docker_desktop_installer_mac_x86_64.dmg"]="https://desktop.docker.com/mac/stable/${LATEST_VERSION}/Docker.dmg"
            ["docker_desktop_installer_linux_debian_x86_64.deb"]="https://desktop.docker.com/linux/main/${LATEST_VERSION}/docker-desktop-latest-amd64.deb"
            ["docker_desktop_installer_linux_fedora_x86_64.rpm"]="https://desktop.docker.com/linux/main/${LATEST_VERSION}/docker-desktop-latest-x86_64.rpm"
            ["docker_desktop_installer_linux_ubuntu_x86_64.deb"]="https://desktop.docker.com/linux/main/${LATEST_VERSION}/docker-desktop-latest-amd64.deb"
            ["docker_desktop_installer_linux_centos_x86_64.rpm"]="https://desktop.docker.com/linux/main/${LATEST_VERSION}/docker-desktop-latest-x86_64.rpm"
          )

          for filename in "${!installers[@]}"; do
            url="${installers[$filename]}"
            file_path="$INSTALLERS_DIR/$filename"
            echo "Downloading $filename from$url"

            # 使用 mkdir 确保目录存在
            mkdir -p "$(dirname "$file_path")"

            curl -L -o "$file_path" "$url" || { echo "Failed to download $filename"; exit 1; }

            if [ ! -s "$file_path" ]; then
              echo "$filename is empty after download. Exiting."
              exit 1
            fi
          done

      - name: List Installers Directory
        run: |
          ls -la $INSTALLERS_DIR

  prepare_release_notes:
    # ... 其他作业步骤

  create_release:
    # ... 其他作业步骤
